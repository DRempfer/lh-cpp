VimL:" empty-exception-class File Template, Luc Hermitte <hermitte {at} free {dot} fr>, 27th Nov 2015
VimL:" hint: Minimalist exception class
VimL: let s:default_constructor = s:Param("default-constructor", {"visibility": "none"})
VimL: let s:destructor = s:Param("destructor", {})
VimL: let s:destructor.virtual = 1
MuT:  let s:parents = s:Param("parents", [])
MuT:  let s:parent_exception = {"std::runtime_error": {"name": "runtime_error", "namespace": "std", "includes": "<stdexcept>"}}
VimL: let s:parents += [s:parent_exception]
VimL: call s:Include('list-constructors', 'cpp/internals')
MuT:  let s:functions = s:Param("functions", [])
MuT:  if lh#cpp#use_cpp11() && empty(s:constructors)
VimL:   call insert(s:functions, {"signature": "using ". lh#cpp#snippets#constructor_name(s:parent_exception) })
MuT:  else
VimL:   call insert(s:functions, {"kind": "constructor", "parameters": "<++>"})
MuT:  endif
VimL: call s:Include("class-skeleton", "cpp/internals")
